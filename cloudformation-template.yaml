AWSTemplateFormatVersion: '2010-09-09'
Description: 'Document Splitting POC - Secure Production Deployment (No Replication)'

Parameters:
  S3BucketName:
    Type: String
    Description: 'S3 bucket name (leave empty for auto-generation)'
    Default: ''

  SampleDocumentS3URI:
    Type: String
    Description: 'Sample document S3 URI (uploaded separately)'
    Default: ''

Conditions:
  CreateS3Bucket: !Equals [!Ref S3BucketName, '']
  HasSampleDocument: !Not [!Equals [!Ref SampleDocumentS3URI, '']]

Resources:
  # KMS Key for S3 encryption
  S3EncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: 'KMS Key for Document Splitting S3 bucket encryption'
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'
          - Sid: Allow service access
            Effect: Allow
            Principal:
              Service: 
                - s3.amazonaws.com
                - logging.s3.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: '*'

  S3EncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub 'alias/document-splitting-s3-${AWS::Region}'
      TargetKeyId: !Ref S3EncryptionKey

  # Main S3 Bucket with self-logging and full security (복제 제거)
  S3Bucket:
    Type: AWS::S3::Bucket
    Condition: CreateS3Bucket
    Properties:
      BucketName: !Sub 'document-splitting-${AWS::AccountId}-${AWS::Region}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref S3EncryptionKey
            BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
      ObjectLockEnabled: true
      ObjectLockConfiguration:
        ObjectLockEnabled: Enabled
        Rule:
          DefaultRetention:
            Mode: GOVERNANCE
            Days: 30
      LoggingConfiguration:
        DestinationBucketName: !Sub 'document-splitting-${AWS::AccountId}-${AWS::Region}'
        LogFilePrefix: 'access-logs/'
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT, POST, DELETE, HEAD]
            AllowedOrigins: ['*']
            MaxAge: 3600
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldFiles
            Status: Enabled
            Filter:
              Prefix: 'documents/'
            ExpirationInDays: 30
          - Id: TransitionToIA
            Status: Enabled
            Filter:
              Prefix: 'documents/'
            Transition:
              Days: 30
              StorageClass: STANDARD_IA
          - Id: TransitionToGlacier
            Status: Enabled
            Filter:
              Prefix: 'documents/'
            Transition:
              Days: 90
              StorageClass: GLACIER
          - Id: DeleteOldAccessLogs
            Status: Enabled
            Filter:
              Prefix: 'access-logs/'
            ExpirationInDays: 90

  # Enhanced S3 Bucket Policy for maximum security
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: CreateS3Bucket
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: DenyUnSecureCommunications
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub '${S3Bucket}/*'
              - !Ref S3Bucket
            Condition:
              Bool:
                'aws:SecureTransport': false
          - Sid: DenyUnencryptedUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Sub '${S3Bucket}/*'
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyIncorrectEncryptionHeader
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Sub '${S3Bucket}/*'
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption-aws-kms-key-id': !GetAtt S3EncryptionKey.Arn
          - Sid: DenyPublicReadAcl
            Effect: Deny
            Principal: '*'
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
            Resource: !Sub '${S3Bucket}/*'
            Condition:
              StringEquals:
                's3:x-amz-acl':
                  - 'public-read'
                  - 'public-read-write'
                  - 'authenticated-read'

  # Blueprint 1: Uniform Residential Loan Application
  BlueprintLoanApplication:
    Type: AWS::Bedrock::Blueprint
    Properties:
      BlueprintName: !Sub 'Doc-URLA'
      Type: DOCUMENT
      BlueprintStage: LIVE
      Schema:
        "$schema": "http://json-schema.org/draft-07/schema#"
        description: "Uniform Residential Loan Application (URLA) - Form 1003/65. EXACTLY 9 pages with standardized header 'Uniform Residential Loan Application'. Contains borrower information, financial details, property information, and demographics. Must have Form 1003 or Form 65 identifier."
        class: "Uniform-Residential-Loan-Application"
        type: "object"
        properties:
          borrower_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract primary borrower name"
          loan_amount:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract loan amount"
          property_address:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract subject property address"
          monthly_income:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract total monthly income"
          loan_purpose:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan purpose"
          employment_info:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract employment information"
          document_type:
            type: "string"
            inferenceType: "inferred"
            instruction: "Classify as LOAN APPLICATION document"

  # Blueprint 2: Homebuyer Certificate
  BlueprintHomebuyerCert:
    Type: AWS::Bedrock::Blueprint
    Properties:
      BlueprintName: !Sub 'Doc-HomebuyerCert'
      Type: DOCUMENT
      BlueprintStage: LIVE
      Schema:
        "$schema": "http://json-schema.org/draft-07/schema#"
        description: "Homebuyer Education Certificate - Single page certificate from MGIC or similar organization. Contains certificate number, participant name, completion date, and education program details. Usually titled 'Certificate of Achievement' or 'Homebuyer Education Program Certificate'."
        class: "Homebuyer-Certificate"
        type: "object"
        properties:
          document_title:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract document title or header"
          content_summary:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract main content or purpose"
          participant_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract participant or subject name"
          date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract relevant date"
          organization:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract issuing organization"
          document_type:
            type: "string"
            inferenceType: "inferred"
            instruction: "Classify as OTHER document"

  # Blueprint 3: Form 1004
  BlueprintForm1004:
    Type: AWS::Bedrock::Blueprint
    Properties:
      BlueprintName: !Sub 'Doc-Form1004'
      Type: DOCUMENT
      BlueprintStage: LIVE
      Schema:
        "$schema": "http://json-schema.org/draft-07/schema#"
        description: "Uniform Residential Appraisal Report (URAR) - Form 1004/70. Multi-page property appraisal document with standardized header 'Uniform Residential Appraisal Report'. Contains property details, comparable sales, and appraiser certification. Must have Form 1004 or Form 70 identifier."
        class: "Uniform Residential Appraisal Report"
        type: "object"
        properties:
          property_address:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract property address"
          purchase_price:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract purchase price"
          buyer_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract buyer name"
          seller_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract seller name"
          contract_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract contract date"
          closing_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract closing date"
          document_type:
            type: "string"
            inferenceType: "inferred"
            instruction: "Classify as PSA document"

  # Blueprint 4: Bank Statement
  BlueprintBankStatement:
    Type: AWS::Bedrock::Blueprint
    Properties:
      BlueprintName: !Sub 'Doc-BankStatement'
      Type: DOCUMENT
      BlueprintStage: LIVE
      Schema:
        "$schema": "http://json-schema.org/draft-07/schema#"
        description: "Bank Account Statement - Financial statement from any bank (RBS, Chase, Wells Fargo, etc.) showing account transactions, balances, and account holder information. Contains transaction tables with dates, descriptions, amounts, and running balances."
        class: "RBS-Bank-Statement"
        type: "object"
        properties:
          underwriting_decision:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract underwriting decision or recommendation"
          borrower_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract borrower name"
          loan_amount:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract loan amount"
          findings_summary:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract DU findings summary"
          case_id:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract case ID or reference number"
          document_type:
            type: "string"
            inferenceType: "inferred"
            instruction: "Classify as DU FINDINGS document"

  # Blueprint 5: Form 1008
  BlueprintForm1008:
    Type: AWS::Bedrock::Blueprint
    Properties:
      BlueprintName: !Sub 'Doc-Form1008'
      Type: DOCUMENT
      BlueprintStage: LIVE
      Schema:
        "$schema": "http://json-schema.org/draft-07/schema#"
        description: "Uniform Underwriting and Transmittal Summary - Form 1008/1077. Multi-page mortgage underwriting form with EXACT header 'Uniform Underwriting and Transmittal Summary'. Contains 4 sections (I-IV): Borrower Info, Mortgage Info, Underwriting Info, Seller Info. Must have Form 1008 or Form 1077 identifier."
        class: "Uniform Underwriting and Transmittal Summary"
        type: "object"
        properties:
          borrower_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract borrower name"
          loan_amount:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract loan amount"
          property_address:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract property address"
          underwriter_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract underwriter name"
          transmittal_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract transmittal date"
          loan_type:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan type"
          document_type:
            type: "string"
            inferenceType: "inferred"
            instruction: "Classify as TRANSMITTAL document"
          credit_score:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract representative credit/indicator score"
          required_funds_to_close:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract required borrower funds to close"
          verified_assets:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract verified assets amount"
          seller_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract seller name"

  # Blueprint 5: DU Underwriting Findings
  BlueprintDUFindings:
    Type: AWS::Bedrock::Blueprint
    Properties:
      BlueprintName: !Sub 'Doc-DU-Underwriting-Findings'
      Type: DOCUMENT
      BlueprintStage: LIVE
      Schema:
        "$schema": "http://json-schema.org/draft-07/schema#"
        description: "Desktop Underwriter (DU) Findings Report - Multi-page automated underwriting report with headers containing 'Desktop Underwriter', 'DU Findings', or 'Underwriting Findings'. Contains DU recommendations, case ID, verification messages, and loan analysis. Typically 7-8 pages."
        class: "DU-Underwriting-Findings"
        type: "object"
        definitions:
          verification_messages:
            type: "object"
            properties:
              message_number:
                type: "number"
                inferenceType: "explicit"
                instruction: "Extract message/condition number"
              message_text:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract full verification message or approval condition text"
              message_category:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract message category (Risk/Eligibility, Verification, Credit, etc.)"
          liability_accounts:
            type: "object"
            properties:
              creditor_name:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract creditor company name"
              balance:
                type: "number"
                inferenceType: "explicit"
                instruction: "Extract outstanding balance amount"
              monthly_payment:
                type: "number"
                inferenceType: "explicit"
                instruction: "Extract monthly payment amount"
        properties:
          recommendation:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract DU recommendation (Approve/Eligible, Refer, etc.)"
          lender_loan_number:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract lender loan number"
          casefile_id:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract DU casefile ID"
          submission_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract submission date and time"
          du_version:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract DU version (e.g., DUG4.1)"
          ltv_ratio:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract loan-to-value ratio percentage"
          cltv_ratio:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract combined loan-to-value ratio percentage"
          note_rate:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract note rate percentage"
          housing_expense_ratio:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract housing expense ratio percentage"
          total_expense_ratio:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract total expense ratio percentage"
          loan_type:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan type (Federal Housing Administration, Conventional, etc.)"
          loan_term:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract loan term in months"
          total_loan_amount:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract total loan amount"
          amortization_type:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract amortization type (Fixed Rate, ARM, etc.)"
          sales_price:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract sales price for purchase transactions"
          appraised_value:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract appraised value"
          loan_purpose:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan purpose (Purchase, Refinance, etc.)"
          property_type:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract property type (Planned Unit Development, Single Family, etc.)"
          property_address:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract subject property address"
          chums_id:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract CHUMS ID (e.g., ZFHA)"
          minimum_investment_requirement:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract minimum statutory investment requirement amount"
          disbursement_deadline:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan disbursement deadline date"
          verification_document_deadline:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract verification documents deadline (120 days from disbursement)"
          hazard_insurance:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract hazard insurance amount"
          property_taxes:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract property taxes amount"
          mortgage_insurance:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract mortgage insurance amount"
          hoa_fees:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract HOA fees amount"
          total_housing_payment:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract total housing payment amount"
          all_other_payments:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract all other monthly payments amount"
          total_expense_payment:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract total expense payment amount"
          available_funds:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract available funds amount"
          cash_back_amount:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract cash back amount"
          net_cash_back:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract net cash back amount"
          reserves_amount:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract reserves amount"
          months_reserves:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract number of months of reserves"
          rental_history_verification_required:
            type: "boolean"
            inferenceType: "explicit"
            instruction: "Extract whether rental history verification is required"
          fha_total_scorecard_used:
            type: "boolean"
            inferenceType: "explicit"
            instruction: "Extract whether FHA TOTAL scorecard was used"
          verification_messages:
            type: "array"
            instruction: "Extract all verification messages and approval conditions"
            items:
              "$ref": "#/definitions/verification_messages"
          liability_accounts:
            type: "array"
            instruction: "Extract all liability accounts used in DTI calculation"
            items:
              "$ref": "#/definitions/liability_accounts"

  # Blueprint 6: Purchase and Sale Agreement
  BlueprintPSA:
    Type: AWS::Bedrock::Blueprint
    Properties:
      BlueprintName: !Sub 'Doc-Purchase-Sale-Agreement'
      Type: DOCUMENT
      BlueprintStage: LIVE
      Schema:
        "$schema": "http://json-schema.org/draft-07/schema#"
        description: "Real estate purchase and sale agreement contract between buyer and seller, 23 pages"
        class: "Purchase-Sale-Agreement"
        type: "object"
        definitions:
          contingencies:
            type: "object"
            properties:
              contingency_type:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract contingency type (Financing, Inspection, Appraisal, etc.)"
              deadline_date:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract contingency deadline date"
              terms:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract specific contingency terms and conditions"
          disclosures:
            type: "object"
            properties:
              disclosure_type:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract disclosure type (Lead Paint, Property Condition, etc.)"
              disclosure_text:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract disclosure statement text"
        properties:
          contract_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract contract execution date"
          buyer_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract buyer name(s)"
          seller_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract seller name(s)"
          property_address:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract complete property address"
          legal_description:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract legal description of property"
          purchase_price:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract total purchase price"
          earnest_money_amount:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract earnest money deposit amount"
          down_payment_amount:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract down payment amount"
          financing_amount:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract financing/loan amount"
          closing_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract anticipated closing date"
          possession_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract possession/occupancy date"
          financing_contingency_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract financing contingency deadline"
          inspection_contingency_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract inspection contingency deadline"
          appraisal_contingency_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract appraisal contingency deadline"
          title_company:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract title company or closing agent name"
          real_estate_agent_buyer:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract buyer's real estate agent name"
          real_estate_agent_seller:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract seller's real estate agent name"
          seller_concessions:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract seller concessions amount"
          property_taxes_prorated:
            type: "boolean"
            inferenceType: "explicit"
            instruction: "Extract whether property taxes are prorated"
          hoa_transfer_required:
            type: "boolean"
            inferenceType: "explicit"
            instruction: "Extract whether HOA transfer is required"
          home_warranty_included:
            type: "boolean"
            inferenceType: "explicit"
            instruction: "Extract whether home warranty is included"
          as_is_condition:
            type: "boolean"
            inferenceType: "explicit"
            instruction: "Extract whether property is sold 'as-is'"
          buyer_signature_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract buyer signature date"
          seller_signature_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract seller signature date"
          contingencies:
            type: "array"
            instruction: "Extract all contingencies and their terms"
            items:
              "$ref": "#/definitions/contingencies"
          disclosures:
            type: "array"
            instruction: "Extract all disclosures and statements"
            items:
              "$ref": "#/definitions/disclosures"

  # Blueprint 7: Loan Transmittal Summary
  BlueprintTransmittal:
    Type: AWS::Bedrock::Blueprint
    Properties:
      BlueprintName: !Sub 'Doc-Loan-Transmittal'
      Type: DOCUMENT
      BlueprintStage: LIVE
      Schema:
        "$schema": "http://json-schema.org/draft-07/schema#"
        description: "Loan transmittal summary document used to transmit completed loan file to investor or insurer, 4 pages"
        class: "Loan-Transmittal-Summary"
        type: "object"
        definitions:
          loan_documents:
            type: "object"
            properties:
              document_type:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract document type (Note, Deed of Trust, Appraisal, etc.)"
              document_date:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract document date"
              pages_count:
                type: "number"
                inferenceType: "explicit"
                instruction: "Extract number of pages for document"
          fees_breakdown:
            type: "object"
            properties:
              fee_type:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract fee type (Origination, Processing, Underwriting, etc.)"
              fee_amount:
                type: "number"
                inferenceType: "explicit"
                instruction: "Extract fee amount"
              paid_by:
                type: "string"
                inferenceType: "explicit"
                instruction: "Extract who paid the fee (Borrower, Lender, Seller)"
        properties:
          transmittal_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract transmittal date"
          loan_number:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan number"
          borrower_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract primary borrower name"
          co_borrower_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract co-borrower name if applicable"
          property_address:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract subject property address"
          loan_amount:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract loan amount"
          interest_rate:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract interest rate"
          loan_term_months:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract loan term in months"
          loan_type:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan type (Conventional, FHA, VA, USDA)"
          loan_purpose:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan purpose (Purchase, Refinance, Cash-Out)"
          occupancy_type:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract occupancy type (Primary, Secondary, Investment)"
          property_type:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract property type (SFR, Condo, Townhome, etc.)"
          ltv_ratio:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract loan-to-value ratio"
          cltv_ratio:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract combined loan-to-value ratio"
          debt_to_income_ratio:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract debt-to-income ratio"
          credit_score:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract representative credit score"
          appraisal_value:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract appraised value"
          closing_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan closing date"
          funding_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan funding date"
          first_payment_date:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract first payment due date"
          monthly_payment_pi:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract monthly principal and interest payment"
          escrow_payment:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract monthly escrow payment"
          total_monthly_payment:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract total monthly payment"
          lender_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract originating lender name"
          loan_officer_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract loan officer name"
          underwriter_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract underwriter name"
          investor_name:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract investor or purchaser name"
          servicing_rights:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract servicing rights (Retained, Released, TBD)"
          mortgage_insurance_company:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract mortgage insurance company name"
          mortgage_insurance_premium:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract mortgage insurance premium amount"
          hazard_insurance_company:
            type: "string"
            inferenceType: "explicit"
            instruction: "Extract hazard insurance company name"
          hazard_insurance_premium:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract annual hazard insurance premium"
          total_closing_costs:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract total closing costs"
          cash_to_close:
            type: "number"
            inferenceType: "explicit"
            instruction: "Extract borrower cash to close amount"
          loan_documents:
            type: "array"
            instruction: "Extract all loan documents included in transmittal"
            items:
              "$ref": "#/definitions/loan_documents"
          fees_breakdown:
            type: "array"
            instruction: "Extract breakdown of all fees and charges"
            items:
              "$ref": "#/definitions/fees_breakdown"

  # BDA Data Automation Project
  BDADataAutomationProject:
    Type: AWS::Bedrock::DataAutomationProject
    DependsOn:
      - BlueprintLoanApplication
      - BlueprintHomebuyerCert
      - BlueprintForm1004
      - BlueprintBankStatement
      - BlueprintForm1008
      - BlueprintDUFindings
      - BlueprintPSA
      - BlueprintTransmittal
    Properties:
      ProjectName: !Sub 'document-splitting-project-${AWS::Region}'
      ProjectDescription: 'Document Splitting POC - Custom Output Processing Project'
      ProjectStage: LIVE
      StandardOutputConfiguration:
        Document:
          Extraction:
            BoundingBox:
              State: DISABLED
            Granularity:
              Types: 
                - DOCUMENT
                - PAGE
                - ELEMENT
          OutputFormat:
            TextFormat:
              Types: 
                - MARKDOWN
            AdditionalFileFormat:
              State: DISABLED
      CustomOutputConfiguration:
        Blueprints:
          - BlueprintArn: !Ref BlueprintLoanApplication
            BlueprintStage: LIVE
          - BlueprintArn: !Ref BlueprintHomebuyerCert
            BlueprintStage: LIVE
          - BlueprintArn: !Ref BlueprintForm1004
            BlueprintStage: LIVE
          - BlueprintArn: !Ref BlueprintBankStatement
            BlueprintStage: LIVE
          - BlueprintArn: !Ref BlueprintForm1008
            BlueprintStage: LIVE
          - BlueprintArn: !Ref BlueprintDUFindings
            BlueprintStage: LIVE
          - BlueprintArn: !Ref BlueprintPSA
            BlueprintStage: LIVE
          - BlueprintArn: !Ref BlueprintTransmittal
            BlueprintStage: LIVE
          - BlueprintArn: !Sub 'arn:aws:bedrock:${AWS::Region}:aws:blueprint/bedrock-data-automation-public-us-driver-license'
      OverrideConfiguration:
        Document:
          Splitter: 
            State: ENABLED

  # Managed Policies for App Runner Role
  S3AccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
            Resource: 
              - !Sub 
                - '${BucketArn}/documents/*'
                - BucketArn: !If [CreateS3Bucket, !GetAtt S3Bucket.Arn, !Sub 'arn:aws:s3:::${S3BucketName}']
              - !Sub 
                - '${BucketArn}/samples/*'
                - BucketArn: !If [CreateS3Bucket, !GetAtt S3Bucket.Arn, !Sub 'arn:aws:s3:::${S3BucketName}']
              - !Sub 
                - '${BucketArn}/output/*'
                - BucketArn: !If [CreateS3Bucket, !GetAtt S3Bucket.Arn, !Sub 'arn:aws:s3:::${S3BucketName}']
              - !Sub 
                - '${BucketArn}/uploads/*'
                - BucketArn: !If [CreateS3Bucket, !GetAtt S3Bucket.Arn, !Sub 'arn:aws:s3:::${S3BucketName}']
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource: !If [CreateS3Bucket, !GetAtt S3Bucket.Arn, !Sub 'arn:aws:s3:::${S3BucketName}']
            Condition:
              StringLike:
                's3:prefix':
                  - 'documents/*'
                  - 'samples/*'
                  - 'output/*'

  BedrockAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - bedrock:InvokeDataAutomationAsync
              - bedrock:GetDataAutomationStatus
              - bedrock-data-automation:InvokeDataAutomationAsync
              - bedrock-data-automation:GetDataAutomationStatus
            Resource: 
              # Cross-Region Inference Support - 모든 지역 허용
              - !Sub 'arn:aws:bedrock:*:${AWS::AccountId}:data-automation-profile/us.data-automation-v1'
              - 'arn:aws:bedrock:*:aws:data-automation-project/public-default'
              - !Sub 'arn:aws:bedrock:*:${AWS::AccountId}:data-automation-project/*'
              # Runtime Resources - 두 가지 패턴 모두 지원
              - !Sub 'arn:aws:bedrock-data-automation:*:${AWS::AccountId}:data-automation-profile/*'
              - !Sub 'arn:aws:bedrock-data-automation:*:${AWS::AccountId}:invocation/*'
              # GetDataAutomationStatus를 위한 추가 패턴
              - !Sub 'arn:aws:bedrock:*:${AWS::AccountId}:data-automation-invocation/*'
          - Effect: Allow
            Action:
              - bedrock:InvokeModel
            Resource: 
              # Foundation Models (계정 ID 없음)
              - 'arn:aws:bedrock:*::foundation-model/*'
              # Inference Profiles (계정 ID 포함)
              - !Sub 'arn:aws:bedrock:*:${AWS::AccountId}:inference-profile/*'
          - Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: !GetAtt S3EncryptionKey.Arn

  # IAM Role for App Runner (no explicit name, no inline policies)
  AppRunnerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: tasks.apprunner.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - !Ref S3AccessPolicy
        - !Ref BedrockAccessPolicy

  # App Runner Service
  AppRunnerService:
    Type: AWS::AppRunner::Service
    DependsOn: BDADataAutomationProject
    Properties:
      ServiceName: !Sub 'document-splitting-${AWS::Region}'
      SourceConfiguration:
        AutoDeploymentsEnabled: false
        ImageRepository:
          ImageIdentifier: 'public.ecr.aws/d0f8z5z3/document-splitting:latest'
          ImageConfiguration:
            Port: '8080'
            RuntimeEnvironmentVariables:
              - Name: NODE_ENV
                Value: production
              - Name: AWS_REGION
                Value: !Ref AWS::Region
              - Name: S3_BUCKET
                Value: !If [CreateS3Bucket, !Ref S3Bucket, !Ref S3BucketName]
              - Name: BDA_PROJECT_ARN
                Value: !Ref BDADataAutomationProject
              - Name: SAMPLE_DOCUMENT_S3_URI
                Value: !If 
                  - HasSampleDocument
                  - !Ref SampleDocumentS3URI
                  - !Sub 
                    - 's3://${BucketName}/samples/documents/merged.pdf'
                    - BucketName: !If [CreateS3Bucket, !Ref S3Bucket, !Ref S3BucketName]
              - Name: LOG_LEVEL
                Value: info
              - Name: LOG_TO_CONSOLE
                Value: 'true'
          ImageRepositoryType: ECR_PUBLIC
      InstanceConfiguration:
        Cpu: 1024
        Memory: 2048
        InstanceRoleArn: !GetAtt AppRunnerInstanceRole.Arn

Outputs:
  ServiceUrl:
    Value: !Sub 'https://${AppRunnerService.ServiceUrl}'
    Description: 'Application URL'
  
  ServiceArn:
    Value: !Ref AppRunnerService
    Description: 'App Runner Service ARN'

  S3Bucket:
    Value: !If [CreateS3Bucket, !Ref S3Bucket, !Ref S3BucketName]
    Description: 'Main S3 bucket for document processing (with self-logging)'
  
  KMSKeyId:
    Value: !Ref S3EncryptionKey
    Description: 'KMS Key ID for S3 encryption'
  
  BDAProjectArn:
    Value: !Ref BDADataAutomationProject
    Description: 'BDA Data Automation Project ARN'
    
  BlueprintArns:
    Value: !Sub 
      - 'LoanApp: ${LoanApp}, HomebuyerCert: ${HomebuyerCert}, Form1004: ${Form1004}, BankStatement: ${BankStatement}, Form1008: ${Form1008}'
      - LoanApp: !Ref BlueprintLoanApplication
        HomebuyerCert: !Ref BlueprintHomebuyerCert
        Form1004: !Ref BlueprintForm1004
        BankStatement: !Ref BlueprintBankStatement
        Form1008: !Ref BlueprintForm1008
    Description: 'Blueprint ARNs for document classification'
  
  SampleDocumentS3URI:
    Value: !If 
      - HasSampleDocument
      - !Ref SampleDocumentS3URI
      - !Sub 
        - 's3://${BucketName}/samples/documents/merged.pdf'
        - BucketName: !If [CreateS3Bucket, !Ref S3Bucket, !Ref S3BucketName]
    Description: 'Sample document S3 URI'
  
  UpdateCommand:
    Value: !Sub 'aws apprunner start-deployment --service-arn ${AppRunnerService.ServiceArn} --region ${AWS::Region}'
    Description: 'Command to update the App Runner service'